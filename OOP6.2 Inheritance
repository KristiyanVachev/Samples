
#include <iostream>

using namespace std;


 class Matrix
{
 protected:
     int rows;
     int cols;
     /**< float data[100][100];  */
    float **data;
 public:
     //Constructor
     Matrix(int m, int n)
    {
        rows = m;
        cols = n;
        data = new float*[m];
        for(int i = 0; i<m; i++)
        {
            data[i]=new float[n];
        }
    }

    Matrix(const Matrix &other)
    {
        rows = other.rows;
        cols = other.cols;
        data = new float*[rows];
        for(int i = 0; i<rows;i++)
        {
            data[i] = new float[cols];
            for(int j = 0; j<cols; j++)
            {
                data[i][j] = other.data[i][j];
            }
        }
    }

    ~Matrix()
    {
        for(int i = 0; i<rows; i++)
        {
            delete[] data[i];
        }
        delete[] data;
    }

    void enter()
    {
        for (int i = 0; i<rows; i++)
        {
            for (int j = 0; j<cols; j++)
            {
                cout<<"data["<<i<<"]["<<j<<"]: ";
                cin>>data[i][j];
            }
        }
    }

    void print(const char* name)
    {
        cout<<name<<endl;
        for(int i = 0; i<rows;i++)
        {
            for(int j=0; j<cols; j++)
            {
                cout<<data[i][j]<<" ";
            }
            cout<<endl;
        }
    }

    Matrix sumWith(const Matrix &other)
    {
        Matrix result(rows,cols);
        for(int i = 0; i < rows; i++)
        {
            for(int j = 0; j<cols; j++)
            {
                result.data[i][j]=data[i][j]+other.data[i][j];
            }
        }
        return result;
    }
};

class SquareMatrix:public Matrix
{
public:
    SquareMatrix(int a):Matrix(a,a)
    {}
    void initWithe()
    {
        for (int i = 0; i<rows;i++)
        {
            for (int j = 0; j<cols; j++)
            {
                if(i == j)
                {
                    data[i][j] = 1;
                }
                else
                {
                    data[i][j] = 0;
                }
            }
        }
    }

    void print(const char* name)
    {
        Matrix::print(name);
        cout<<"The above matrix is square"<<endl;
    }
};

int main()
{
     SquareMatrix SM(5);
     SM.initWithe();
     SM.print("koala");

    return 0;
}

